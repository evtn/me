import {
    IconArrowsDiagonal,
    IconArrowsDiagonalMinimize2,
    IconArrowsLeftRight,
    IconAt,
    IconBrandGithub,
    IconBrandLinkedin,
    IconBrandTelegram,
    IconBriefcase,
    IconBriefcaseOff,
    IconBulb,
    IconBulbOff,
    IconCalendar,
    IconCalendarOff,
    IconChevronsRight,
    IconCode,
    IconColorSwatch,
    IconColorSwatchOff,
    IconContrast,
    IconContrastOff,
    IconCopy,
    IconCopyCheck,
    IconDeviceDesktop,
    IconDownload,
    IconExternalLink,
    IconFile,
    IconFileTypePdf,
    IconFilter,
    IconGitMerge,
    IconInnerShadowTopRight,
    IconLetterCase,
    IconLetterCaseLower,
    IconLink,
    IconMapPin,
    IconMoon,
    IconPackage,
    IconPackageOff,
    IconPhoto,
    IconPlaneTilt,
    IconPlanet,
    IconPlayerPlay,
    IconPlugConnected,
    IconPlugConnectedX,
    IconPlus,
    IconReceiptDollar,
    IconReceiptOff,
    IconRefresh,
    IconSettings,
    IconSettingsOff,
    IconShare,
    IconSnowflake,
    IconSpace,
    IconSpaceOff,
    IconSunglasses,
    IconUsers,
    IconVectorBezier2,
    IconX,
    TablerIconsProps,
} from "@tabler/icons-react";
import { FunctionalComponent } from "preact";

import { Logo } from "@/components";

import "./style.css";

import { JSLogo, TSLogo } from "./CornerLogo";
import { EpamLogo } from "./EpamLogo";
import { InteticsLogo } from "./InteticsLogo";
import { MCCLogo } from "./MCCLogo";
import { PythonLogo } from "./PythonLogo";
import { ReactLogo } from "./ReactLogo";
import { IconBase } from "./base";
import { KartuliIcon } from "./kartuli";

const Tabler = (Icon: FunctionalComponent<TablerIconsProps>) => {
    return () => <Icon stroke={1.5} />;
};

export const iconList = {
    at: Tabler(IconAt),
    briefcase: Tabler(IconBriefcase),
    briefcaseOff: Tabler(IconBriefcaseOff),
    bulb: Tabler(IconBulb),
    bulbOff: Tabler(IconBulbOff),
    calendar: Tabler(IconCalendar),
    calendarOff: Tabler(IconCalendarOff),
    chevrondoubleright: Tabler(IconChevronsRight),
    circle: Tabler(IconInnerShadowTopRight),
    code: Tabler(IconVectorBezier2),
    colors: Tabler(IconColorSwatch),
    colorsOff: Tabler(IconColorSwatchOff),
    contrast: Tabler(IconContrast),
    contrastOff: Tabler(IconContrastOff),
    copy: Tabler(IconCopy),
    copyCheck: Tabler(IconCopyCheck),
    desktop: Tabler(IconDeviceDesktop),
    dollar: Tabler(IconReceiptDollar),
    download: Tabler(IconDownload),
    earth: Tabler(IconPlanet),
    epam: EpamLogo,
    expand: Tabler(IconArrowsDiagonal),
    external: Tabler(IconExternalLink),
    file: Tabler(IconFile),
    filter: Tabler(IconFilter),
    github: Tabler(IconBrandGithub),
    gitmerge: Tabler(IconGitMerge),
    image: Tabler(IconPhoto),
    intetics: InteticsLogo,
    javascript: JSLogo,
    jotai: () => <span>J≈çtai</span>,
    kartuli: KartuliIcon,
    link: Tabler(IconLink),
    linkedin: Tabler(IconBrandLinkedin),
    location: Tabler(IconMapPin),
    logo: () => <Logo />,
    lowercase: Tabler(IconLetterCaseLower),
    mcc: MCCLogo,
    minimize: Tabler(IconArrowsDiagonalMinimize2),
    monospace: Tabler(IconSpace),
    moon: Tabler(IconMoon),
    normalcase: Tabler(IconLetterCase),
    package: Tabler(IconPackage),
    packageOff: Tabler(IconPackageOff),
    pdf: Tabler(IconFileTypePdf),
    plane: Tabler(IconPlaneTilt),
    play: Tabler(IconPlayerPlay),
    plus: Tabler(IconPlus),
    preact: () => <ReactLogo variant="preact" />,
    proportional: Tabler(IconSpaceOff),
    python: PythonLogo,
    react: () => <ReactLogo variant="react" />,
    reactNative: () => <ReactLogo variant="react" />,
    refreshalt: Tabler(IconRefresh),
    rgx: () => <code>/a+/</code>,
    settings: Tabler(IconSettings),
    settingsOff: Tabler(IconSettingsOff),
    share: Tabler(IconShare),
    snow: Tabler(IconSnowflake),
    source: Tabler(IconCode),
    stack: Tabler(IconPlugConnected),
    stackOff: Tabler(IconPlugConnectedX),
    sunglasses: Tabler(IconSunglasses),
    tab: Tabler(IconArrowsLeftRight),
    telegram: Tabler(IconBrandTelegram),
    typescript: TSLogo,
    users: Tabler(IconUsers),
    wrongReceipt: Tabler(IconReceiptOff),
    x: Tabler(IconX),
} as const satisfies Record<string, IconBase>;
